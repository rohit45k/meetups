{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\udemy\\\\next-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar DetailPage = function DetailPage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}; // when we have dynamic pages and using getStaticProps method we also use this function\n\n\n_c = DetailPage;\nexport var __N_SSG = true;\nexport default DetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/udemy/next-project/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","DetailPage","props","meetupData","title","description","image","address"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF1B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH5B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJhC;AAAA;AAAA;AAAA;AAAA,aALF;AAAA,kBADF;AAcD,CAfD,C,CAiBA;;;KAjBMJ,U;;AAiEN,eAAeA,UAAf","sourcesContent":["import Head from 'next/head';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst DetailPage = (props) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta name='description' content={props.meetupData.description}></meta>\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// when we have dynamic pages and using getStaticProps method we also use this function\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://rohit:0buYSCyNAo7UgkE5@cluster0.fkit3ls.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const result = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false, // ask if any path is missing? to generate in dynamically\r\n    paths: result.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://rohit:0buYSCyNAo7UgkE5@cluster0.fkit3ls.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const result = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: result._id.toString(),\r\n        image: result.image,\r\n        title: result.title,\r\n        address: result.address,\r\n        description: result.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default DetailPage;\r\n"]},"metadata":{},"sourceType":"module"}